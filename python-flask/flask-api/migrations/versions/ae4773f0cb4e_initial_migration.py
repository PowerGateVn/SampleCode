"""Initial migration.

Revision ID: ae4773f0cb4e
Revises: 
Create Date: 2022-04-18 05:04:41.536521

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ae4773f0cb4e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('UserBasic',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('hash_password', sa.String(length=120), nullable=False),
    sa.Column('role', sa.String(length=10), nullable=False),
    sa.Column('deactivate', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('UserAdvance',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('first_name', sa.String(length=120), nullable=False),
    sa.Column('last_name', sa.String(length=120), nullable=False),
    sa.Column('date_of_birth', sa.String(length=10), nullable=True),
    sa.Column('phone_number', sa.String(length=11), nullable=True),
    sa.Column('user_basic_id', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['user_basic_id'], ['UserBasic.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('admin_comments')
    op.drop_index('idx_21515_guideline_id', table_name='event_types')
    op.drop_table('event_types')
    op.drop_index('idx_21620_product_id', table_name='user_follows_properties')
    op.drop_index('idx_21620_user_id', table_name='user_follows_properties')
    op.drop_table('user_follows_properties')
    op.drop_index('idx_21632_product_id', table_name='user_matched_properties')
    op.drop_index('idx_21632_user_id', table_name='user_matched_properties')
    op.drop_table('user_matched_properties')
    op.drop_index('idx_21538_crawl_id', table_name='investors_url')
    op.drop_table('investors_url')
    op.drop_index('idx_21414_key', table_name='admin_permissions')
    op.drop_table('admin_permissions')
    op.drop_index('idx_21581_role_key', table_name='role_permissions')
    op.drop_table('role_permissions')
    op.drop_index('idx_21559_investor_id', table_name='real_estate_projects')
    op.drop_index('idx_21559_name', table_name='real_estate_projects')
    op.drop_table('real_estate_projects')
    op.drop_table('home_type')
    op.drop_table('users')
    op.drop_index('idx_21603_user_advisory_proposed_products_ibfk_1', table_name='user_advisory_proposed_products')
    op.drop_table('user_advisory_proposed_products')
    op.drop_index('idx_21491_city_id', table_name='districts')
    op.drop_table('districts')
    op.drop_table('admins')
    op.drop_index('idx_21529_name', table_name='investors')
    op.drop_index('idx_21529_tax_number', table_name='investors')
    op.drop_table('investors')
    op.drop_index('idx_21462_id', table_name='cities')
    op.drop_table('cities')
    op.drop_index('idx_21440_group_id', table_name='chat_group_members')
    op.drop_table('chat_group_members')
    op.drop_index('idx_21547_name', table_name='products')
    op.drop_index('idx_21547_real_estate_project_id', table_name='products')
    op.drop_table('products')
    op.drop_table('roles')
    op.drop_index('idx_21496_id', table_name='events')
    op.drop_index('idx_21496_type_id', table_name='events')
    op.drop_table('events')
    op.drop_table('events_change')
    op.drop_table('admin_roles')
    op.drop_index('idx_21487_criteria', table_name='criteria_group')
    op.drop_table('criteria_group')
    op.drop_index('idx_21610_product_id', table_name='user_bank_loans')
    op.drop_index('idx_21610_user_advisory_id', table_name='user_bank_loans')
    op.drop_index('idx_21610_user_id', table_name='user_bank_loans')
    op.drop_table('user_bank_loans')
    op.drop_table('admin_comment_resolved')
    op.drop_index('idx_21458_group_id', table_name='chat_read_messages')
    op.drop_index('idx_21458_user_id', table_name='chat_read_messages')
    op.drop_table('chat_read_messages')
    op.drop_table('event_impact_projects')
    op.drop_index('idx_21568_crawl_id', table_name='real_estate_projects_url')
    op.drop_table('real_estate_projects_url')
    op.drop_table('crawl_sources')
    op.drop_table('event_impact_projects_change')
    op.drop_index('idx_21636_user_id', table_name='user_sessions')
    op.drop_table('user_sessions')
    op.drop_table('criteria')
    op.drop_index('idx_21431_ower_id', table_name='chat_groups')
    op.drop_index('idx_21431_user_advisory_id', table_name='chat_groups')
    op.drop_table('chat_groups')
    op.drop_table('event_impact_products_change')
    op.drop_index('idx_21624_user_id', table_name='user_investment_preference')
    op.drop_table('user_investment_preference')
    op.drop_index('idx_21448_group_id', table_name='chat_messages')
    op.drop_index('idx_21448_user_id', table_name='chat_messages')
    op.drop_table('chat_messages')
    op.drop_table('real_estate_projects_change')
    op.drop_index('idx_21642_district_id', table_name='wards')
    op.drop_table('wards')
    op.drop_index('idx_21423_user_id', table_name='admin_session')
    op.drop_table('admin_session')
    op.drop_table('products_ai_change')
    op.drop_index('idx_21505_impact_product', table_name='event_impact_products')
    op.drop_table('event_impact_products')
    op.drop_table('investors_change')
    op.drop_table('products_app_change')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('products_app_change',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('code_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='mã code của bds, vd SKU0001'),
    sa.Column('real_estate_project_id', sa.BIGINT(), autoincrement=False, nullable=True, comment='dự án bds id'),
    sa.Column('current_price', sa.NUMERIC(precision=20, scale=2), autoincrement=False, nullable=True, comment='Giá hiện tại của sản phẩm BĐS (giá tại thời điểm nhập dữ liệu)'),
    sa.Column('rarity_level', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='FE1 - Mức độ Hiếm của Sản phẩm BĐS(1 -> 5) '),
    sa.Column('average_unit_price', sa.NUMERIC(precision=12, scale=2), autoincrement=False, nullable=True, comment='FE2 - Đơn giá trung bình (triệu/m2)'),
    sa.Column('master_area', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='FE3 - Diện tích sàn  (m2)'),
    sa.Column('home_type', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='FE4 - Loại nhà đất (Biệt thự Đơn lập, Biệt thự Song lập, Nhà Liền kề, Shophouse, Shophouse Chân đế, Đất nền dự án Sàn, Sàn văn phòng, Sàn thương mại, Shoptel'),
    sa.Column('usage_type', sa.SMALLINT(), autoincrement=False, nullable=True, comment='FE5 - Thời hạn sử dụng BĐS (0: Lâu dài, 1: 50 năm, 2: 70 năm, 3:90 năm)'),
    sa.Column('land_use_cert', sa.SMALLINT(), autoincrement=False, nullable=True, comment='FE6 - Giấy CN quyền sử dụng BĐS (1: đã có, 0: chưa có)'),
    sa.Column('front_road_level', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='FE7 - Điểm kích thước mặt đường của Sản phẩm BĐS'),
    sa.Column('location_level', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='FE9 - Điểm cấp đô thị của tỉnh thành  // Chấm điểm vị trí tiện lợi của sản phẩm BĐS (giá trị 1-5)'),
    sa.Column('quality_level', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='FE10 - Điểm chất lượng sử dụng sản phẩm BĐS '),
    sa.Column('potential_profit', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='{2021:0.15, 2022:0.20, …} // 1.1 Điểm Lợi nhuận Tiềm Năng (Profit Score)'),
    sa.Column('current_price_min', sa.NUMERIC(precision=20, scale=2), autoincrement=False, nullable=True, comment='giá min'),
    sa.Column('current_price_max', sa.NUMERIC(precision=20, scale=2), autoincrement=False, nullable=True, comment='giá max'),
    sa.Column('address_line', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='địa chỉ'),
    sa.Column('distance_to_center_level', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='FE8 - Điểm khoảng cách tới trung tâm tỉnh thành  *'),
    sa.Column('nbr_bed_room', sa.BIGINT(), autoincrement=False, nullable=True, comment='số phòng ngủ'),
    sa.Column('nbr_bath_room', sa.BIGINT(), autoincrement=False, nullable=True, comment='Số phòng tắm'),
    sa.Column('built_up_area', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='Diện tích tim tường'),
    sa.Column('carpet_area', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='Diện tích thông thủy'),
    sa.Column('nbr_floor', sa.BIGINT(), autoincrement=False, nullable=True, comment='số tầng'),
    sa.Column('nbr_apartments', sa.BIGINT(), autoincrement=False, nullable=True, comment='tổng số căn'),
    sa.Column('saleable_area', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='Diện tích Xây dựng'),
    sa.Column('home_direction', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='hướng nhà'),
    sa.Column('distance_to_center', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='Khoảng cách từ sản phẩm BĐS tới trung tâm tỉnh thành.'),
    sa.Column('payment_procedures', sa.TEXT(), autoincrement=False, nullable=True, comment='Luồng tiền thanh toán'),
    sa.Column('taking_over_type', sa.SMALLINT(), autoincrement=False, nullable=True, comment='loại bàn giao. 0: Hoàn thiện, 1:Bán hoàn thiện nội thất, 2:Hoàn thiện mặt ngoài, 3:Xây thô hoàn toàn,  4: Đất nền'),
    sa.Column('taking_over_date', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='ngày bàn giao'),
    sa.Column('subdivision', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='Thuộc tiểu khu'),
    sa.Column('legal_risk_score', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='2.1 - Tiêu chí Rủi Ro Pháp Lý ( Legal risk score)'),
    sa.Column('financial_risk_score', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='2.2 - Tiêu chí Rủi Ro Tài Chính ( Financial risk score)'),
    sa.Column('cost_score', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='2.3 - Tiêu chí Mức giá và diện tích sử dụng (Cost score)'),
    sa.Column('product_score', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='2.4 - Tiêu chí Chất lượng nhà và tiện ích (Product score)'),
    sa.Column('transport_score', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='2.5 - Tiêu chí Chất lượng vị trí giao thông (Transport score)'),
    sa.Column('trending_score', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='1. Trend trên Thị trường'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('images', sa.TEXT(), autoincrement=False, nullable=True, comment='array of list image'),
    sa.Column('thumbnail', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('previewlink', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('crawl_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('crawl_from', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('crawl_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('status', sa.SMALLINT(), server_default=sa.text("'1'::smallint"), autoincrement=False, nullable=True, comment='0: inactive, 1: actived, 2: deleted'),
    sa.Column('app_to_review_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('app_to_review_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('app_rejected_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('app_rejected_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('app_status', sa.SMALLINT(), server_default=sa.text("'0'::smallint"), autoincrement=False, nullable=True, comment='DRAFT_C: 0, PRE_PROCESSED_C: 1, APP_DATA_DRAFT: 2, REVIEW_APP_1:3, REVIEWED_APP_2: 4, REJECTED_APP_1: 5'),
    sa.Column('note', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('lat', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('lon', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('app_approved_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('app_approved_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['real_estate_project_id'], ['real_estate_projects.id'], name='products_ai_change_copy1_real_estate_project_id_fkey', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name='products_ai_change_copy1_pkey')
    )
    op.create_table('investors_change',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=1000), autoincrement=False, nullable=False),
    sa.Column('code_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('trading_name', sa.VARCHAR(length=1000), autoincrement=False, nullable=True, comment='Tên giao dịch'),
    sa.Column('prestige_score', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='điểm uy tín'),
    sa.Column('registered_capital_amount', sa.NUMERIC(precision=20, scale=2), autoincrement=False, nullable=True, comment='Số Vốn đăng ký'),
    sa.Column('is_quoted', sa.SMALLINT(), server_default=sa.text("'0'::smallint"), autoincrement=False, nullable=True, comment='0/1 đã niêm yết hay chưa'),
    sa.Column('activity_type', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('tax_number', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='Mã số thuế'),
    sa.Column('address_line', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('ward_id', sa.BIGINT(), autoincrement=False, nullable=True, comment='phường/xã'),
    sa.Column('district_id', sa.BIGINT(), autoincrement=False, nullable=True, comment='quận/huyện'),
    sa.Column('city_id', sa.BIGINT(), autoincrement=False, nullable=True, comment='tỉnh/thanhpho'),
    sa.Column('lat', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('lon', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('zip_code', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('legal_representative', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='Đại diện pháp luật'),
    sa.Column('license_date', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='Ngày cấp giấy phép'),
    sa.Column('activity_date', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='Ngày hoạt động'),
    sa.Column('website_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('status', sa.SMALLINT(), server_default=sa.text("'1'::smallint"), autoincrement=False, nullable=True, comment='0: inactive, 1: active, 2: deleted'),
    sa.Column('ai_to_review_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('ai_to_review_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('ai_approved_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('ai_approved_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('ai_rejected_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('ai_rejected_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('ai_status', sa.SMALLINT(), server_default=sa.text("'0'::smallint"), autoincrement=False, nullable=True, comment='DRAFT_C: 0, PRE_PROCESSED_C: 1,AI_DATA_DRAFT: 2, REVIEW_AI_1:3,  REVIEWED_AI_2: 4,  REJECTED_AI_1: 5'),
    sa.Column('crawl_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('crawl_from', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('crawl_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('logo_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('full_address', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('note', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('activity_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='investors_copy1_pkey')
    )
    op.create_table('event_impact_products',
    sa.Column('event_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('impact_product', sa.BIGINT(), autoincrement=False, nullable=False, comment='ID của sản phẩm bị ảnh hưởng'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('status', sa.SMALLINT(), server_default=sa.text("'0'::smallint"), autoincrement=False, nullable=False, comment='0: add, 1: updated , 2: remove, 3: approved'),
    sa.Column('impact_product_level', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], name='event_impact_products_ibfk_1', onupdate='RESTRICT', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['impact_product'], ['products.id'], name='event_impact_products_ibfk_2', onupdate='RESTRICT', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('event_id', 'impact_product', name='idx_21505_primary')
    )
    op.create_index('idx_21505_impact_product', 'event_impact_products', ['impact_product'], unique=False)
    op.create_table('products_ai_change',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('code_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='mã code của bds, vd SKU0001'),
    sa.Column('real_estate_project_id', sa.BIGINT(), autoincrement=False, nullable=True, comment='dự án bds id'),
    sa.Column('current_price', sa.NUMERIC(precision=20, scale=2), autoincrement=False, nullable=True, comment='Giá hiện tại của sản phẩm BĐS (giá tại thời điểm nhập dữ liệu)'),
    sa.Column('rarity_level', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='FE1 - Mức độ Hiếm của Sản phẩm BĐS(1 -> 5) '),
    sa.Column('average_unit_price', sa.NUMERIC(precision=12, scale=2), autoincrement=False, nullable=True, comment='FE2 - Đơn giá trung bình (triệu/m2)'),
    sa.Column('master_area', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='FE3 - Diện tích sàn  (m2)'),
    sa.Column('home_type', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='FE4 - Loại nhà đất (Biệt thự Đơn lập, Biệt thự Song lập, Nhà Liền kề, Shophouse, Shophouse Chân đế, Đất nền dự án Sàn, Sàn văn phòng, Sàn thương mại, Shoptel'),
    sa.Column('usage_type', sa.SMALLINT(), autoincrement=False, nullable=True, comment='FE5 - Thời hạn sử dụng BĐS (0: Lâu dài, 1: 50 năm, 2: 70 năm, 3:90 năm)'),
    sa.Column('land_use_cert', sa.SMALLINT(), autoincrement=False, nullable=True, comment='FE6 - Giấy CN quyền sử dụng BĐS (1: đã có, 0: chưa có)'),
    sa.Column('front_road_level', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='FE7 - Điểm kích thước mặt đường của Sản phẩm BĐS'),
    sa.Column('location_level', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='FE9 - Điểm cấp đô thị của tỉnh thành  // Chấm điểm vị trí tiện lợi của sản phẩm BĐS (giá trị 1-5)'),
    sa.Column('quality_level', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='FE10 - Điểm chất lượng sử dụng sản phẩm BĐS '),
    sa.Column('potential_profit', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='{2021:0.15, 2022:0.20, …} // 1.1 Điểm Lợi nhuận Tiềm Năng (Profit Score)'),
    sa.Column('current_price_min', sa.NUMERIC(precision=20, scale=2), autoincrement=False, nullable=True, comment='giá min'),
    sa.Column('current_price_max', sa.NUMERIC(precision=20, scale=2), autoincrement=False, nullable=True, comment='giá max'),
    sa.Column('address_line', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='địa chỉ'),
    sa.Column('distance_to_center_level', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='FE8 - Điểm khoảng cách tới trung tâm tỉnh thành  *'),
    sa.Column('nbr_bed_room', sa.BIGINT(), autoincrement=False, nullable=True, comment='số phòng ngủ'),
    sa.Column('nbr_bath_room', sa.BIGINT(), autoincrement=False, nullable=True, comment='Số phòng tắm'),
    sa.Column('built_up_area', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='Diện tích tim tường'),
    sa.Column('carpet_area', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='Diện tích thông thủy'),
    sa.Column('nbr_floor', sa.BIGINT(), autoincrement=False, nullable=True, comment='số tầng'),
    sa.Column('nbr_apartments', sa.BIGINT(), autoincrement=False, nullable=True, comment='tổng số căn'),
    sa.Column('saleable_area', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='Diện tích Xây dựng'),
    sa.Column('home_direction', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='hướng nhà'),
    sa.Column('distance_to_center', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='Khoảng cách từ sản phẩm BĐS tới trung tâm tỉnh thành.'),
    sa.Column('payment_procedures', sa.TEXT(), autoincrement=False, nullable=True, comment='Luồng tiền thanh toán'),
    sa.Column('taking_over_type', sa.SMALLINT(), autoincrement=False, nullable=True, comment='loại bàn giao. 0: Hoàn thiện, 1:Bán hoàn thiện nội thất, 2:Hoàn thiện mặt ngoài, 3:Xây thô hoàn toàn,  4: Đất nền'),
    sa.Column('taking_over_date', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='ngày bàn giao'),
    sa.Column('subdivision', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='Thuộc tiểu khu'),
    sa.Column('legal_risk_score', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='2.1 - Tiêu chí Rủi Ro Pháp Lý ( Legal risk score)'),
    sa.Column('financial_risk_score', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='2.2 - Tiêu chí Rủi Ro Tài Chính ( Financial risk score)'),
    sa.Column('cost_score', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='2.3 - Tiêu chí Mức giá và diện tích sử dụng (Cost score)'),
    sa.Column('product_score', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='2.4 - Tiêu chí Chất lượng nhà và tiện ích (Product score)'),
    sa.Column('transport_score', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='2.5 - Tiêu chí Chất lượng vị trí giao thông (Transport score)'),
    sa.Column('trending_score', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='1. Trend trên Thị trường'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('images', sa.TEXT(), autoincrement=False, nullable=True, comment='array of list image'),
    sa.Column('thumbnail', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('previewlink', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('crawl_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('crawl_from', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('crawl_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('status', sa.SMALLINT(), server_default=sa.text("'1'::smallint"), autoincrement=False, nullable=True, comment='0: inactive, 1: actived, 2: deleted'),
    sa.Column('ai_to_review_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('ai_to_review_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('event_to_update_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('event_to_update_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('ai_rejected_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('ai_rejected_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('ai_status', sa.SMALLINT(), server_default=sa.text("'0'::smallint"), autoincrement=False, nullable=True, comment='DRAFT_C: 0, PRE_PROCESSED_C: 1,AI_DATA_DRAFT: 2, REVIEW_AI_1:3,  REVIEWED_AI_2: 4,  REJECTED_AI_1: 5'),
    sa.Column('note', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('lat', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('lon', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('event_to_review_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('event_to_review_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('event_rejected_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('event_rejected_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('ai_approved_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('ai_approved_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='products_copy1_pkey')
    )
    op.create_table('admin_session',
    sa.Column('admin_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('access_token', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('refresh_token', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('expires_in', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['admins.id'], name='admin_session_ibfk_1', onupdate='RESTRICT', ondelete='RESTRICT')
    )
    op.create_index('idx_21423_user_id', 'admin_session', ['admin_id'], unique=False)
    op.create_table('wards',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('district_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('order', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='idx_21642_primary')
    )
    op.create_index('idx_21642_district_id', 'wards', ['district_id'], unique=False)
    op.create_table('real_estate_projects_change',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('investor_id', sa.BIGINT(), autoincrement=False, nullable=True, comment='chủ đầu tư, nhà phát triển'),
    sa.Column('code_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('project_type', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='Json array : [{type, nbr_apartments,nbr_buildings, nbr_floor_min, nbr_floor_max, density_of_elevator, hallway_width }], type lấy từ home_type tbl'),
    sa.Column('address_line', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('ward_id', sa.BIGINT(), autoincrement=False, nullable=True, comment='phường/xã'),
    sa.Column('district_id', sa.BIGINT(), autoincrement=False, nullable=True, comment='quận/huyện'),
    sa.Column('city_id', sa.BIGINT(), autoincrement=False, nullable=True, comment='tỉnh/thanhpho'),
    sa.Column('lat', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('lon', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('zip_code', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('distance_to_center', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='Khoảng cách vào Trung tâm Tỉnh thành km'),
    sa.Column('distance_to_urban', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='Khoảng cách vào Nội thành km'),
    sa.Column('distance_to_major_road', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='Khoảng cách ra Trục đường Lớn gần nhất (Cấp Tỉnh/TP)'),
    sa.Column('total_area', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('total_area_unit', sa.SMALLINT(), server_default=sa.text("'0'::smallint"), autoincrement=False, nullable=True, comment='0: m2, 1: ha'),
    sa.Column('density_of_building', sa.NUMERIC(precision=10, scale=0), autoincrement=False, nullable=True, comment='Mật độ xây dựng %'),
    sa.Column('project_status', sa.SMALLINT(), autoincrement=False, nullable=True, comment='0: đang mở bán, 1: sắp mở bán, 2: đã bàn giao'),
    sa.Column('opening_time_soon', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='với project_status = 1. set = tháng'),
    sa.Column('project_website_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('start_date', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='Ngày khởi công'),
    sa.Column('taking_over_date', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='Ngày bắt đầu bàn giao'),
    sa.Column('sales_consultants', sa.TEXT(), autoincrement=False, nullable=True, comment='Các Tư vấn bán hàng'),
    sa.Column('payment_procedures', sa.TEXT(), autoincrement=False, nullable=True, comment='Luồng tiền thanh toán'),
    sa.Column('constructo_unit', sa.VARCHAR(length=2000), autoincrement=False, nullable=True, comment='Đơn vị thi công, vd: Coteccons, Ecopa'),
    sa.Column('design_unit', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='Đơn vị thiết kế'),
    sa.Column('management_unit', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='Đơn vị quản lý'),
    sa.Column('project_quality_level', sa.SMALLINT(), autoincrement=False, nullable=True, comment='Mức chất lượng sản phẩm (giá trị từ 1-5)'),
    sa.Column('status', sa.SMALLINT(), server_default=sa.text("'1'::smallint"), autoincrement=False, nullable=False, comment='0: inactive, 1: active, 2: deleted'),
    sa.Column('advantage_inner', sa.TEXT(), autoincrement=False, nullable=True, comment='Mức tiện ích nội khu, string of array list advantage'),
    sa.Column('advantage_outer', sa.TEXT(), autoincrement=False, nullable=True, comment='Mức tiện ích ngoại khu, string of array list advantage'),
    sa.Column('ai_status', sa.SMALLINT(), autoincrement=False, nullable=True, comment='stage preview của product'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('crawl_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('crawl_from', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('crawl_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('full_address', sa.VARCHAR(length=1000), autoincrement=False, nullable=True),
    sa.Column('images', sa.TEXT(), autoincrement=False, nullable=True, comment='array : { url, order}'),
    sa.Column('ai_to_review_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('ai_to_review_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('event_to_update_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('event_to_update_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('ai_rejected_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('ai_rejected_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('note', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('event_to_review_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('event_to_review_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('event_rejected_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('event_rejected_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('ai_approved_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('ai_approved_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['investor_id'], ['investors.id'], name='real_estate_projects_copy1_investor_id_fkey', onupdate='RESTRICT', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='real_estate_projects_copy1_pkey')
    )
    op.create_table('chat_messages',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('group_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('last_seen', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content_html', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content_type', sa.BIGINT(), server_default=sa.text("'1'::bigint"), autoincrement=False, nullable=False, comment='0: Text, 1: Image, 2: File'),
    sa.Column('mime_type', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['chat_groups.id'], name='chat_messages_ibfk_2', onupdate='RESTRICT', ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='chat_messages_ibfk_1', onupdate='RESTRICT', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name='idx_21448_primary')
    )
    op.create_index('idx_21448_user_id', 'chat_messages', ['user_id'], unique=False)
    op.create_index('idx_21448_group_id', 'chat_messages', ['group_id'], unique=False)
    op.create_table('user_investment_preference',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('investment_purpose', sa.SMALLINT(), autoincrement=False, nullable=False, comment='0: Để Đầu tư, 1: ở, 2: cả 2'),
    sa.Column('investment_area', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False, comment='json of area'),
    sa.Column('investment_total', sa.NUMERIC(precision=10, scale=0), autoincrement=False, nullable=False, comment='Tổng Giá trị Đầu tư'),
    sa.Column('own_amount', sa.NUMERIC(precision=10, scale=0), autoincrement=False, nullable=False, comment='Số Vốn tự có'),
    sa.Column('loan_amount', sa.NUMERIC(precision=10, scale=0), autoincrement=False, nullable=True, comment='Số Vốn vay'),
    sa.Column('annual_debt_payment', sa.NUMERIC(precision=10, scale=0), autoincrement=False, nullable=True, comment='khả năng thanh toán nợ hàng năm'),
    sa.Column('max_loan_year', sa.NUMERIC(precision=10, scale=0), autoincrement=False, nullable=True, comment='Muốn vay tối đa bao nhiêu năm?'),
    sa.Column('bank_loan_proposal', sa.SMALLINT(), autoincrement=False, nullable=True, comment='[0,1] : Đề Xuất Vay Ngân hàng (nếu có) '),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_investment_preference_ibfk_1', onupdate='RESTRICT', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='idx_21624_primary'),
    postgresql_ignore_search_path=False
    )
    op.create_index('idx_21624_user_id', 'user_investment_preference', ['user_id'], unique=False)
    op.create_table('event_impact_products_change',
    sa.Column('event_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('impact_product', sa.BIGINT(), autoincrement=False, nullable=False, comment='ID của sản phẩm bị ảnh hưởng'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('status', sa.SMALLINT(), server_default=sa.text("'0'::smallint"), autoincrement=False, nullable=False, comment='0: add, 1: updated , 2: remove, 3: approved'),
    sa.Column('impact_product_level', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], name='event_impact_products_copy1_event_id_fkey1', onupdate='RESTRICT', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['impact_product'], ['products.id'], name='event_impact_products_copy1_impact_product_fkey', onupdate='RESTRICT', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('event_id', 'impact_product', name='event_impact_products_copy1_pkey1')
    )
    op.create_table('chat_groups',
    sa.Column('id', sa.BIGINT(), server_default=sa.text("nextval('chat_groups_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('type', sa.SMALLINT(), server_default=sa.text("'1'::smallint"), autoincrement=False, nullable=False, comment='0: admin to user, 1: user to user'),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('ower_id', sa.BIGINT(), autoincrement=False, nullable=True, comment='if type = 0 => owner_id is 0; if type= 1 => owner_id is employer'),
    sa.Column('user_advisory_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('member_id', sa.BIGINT(), autoincrement=False, nullable=True, comment='if type = 0 => member_id is user; if type= 1 => member_id is jobseeker'),
    sa.Column('status', sa.SMALLINT(), server_default=sa.text("'1'::smallint"), autoincrement=False, nullable=True, comment='1 : inbox, 2: archived'),
    sa.Column('group_nomal_type', sa.SMALLINT(), server_default=sa.text("'0'::smallint"), autoincrement=False, nullable=True, comment='0: nomal, 1: direct message'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['ower_id'], ['users.id'], name='chat_groups_ibfk_2', onupdate='RESTRICT', ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['user_advisory_id'], ['user_investment_preference.id'], name='chat_groups_ibfk_1', onupdate='RESTRICT', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name='idx_21431_primary'),
    postgresql_ignore_search_path=False
    )
    op.create_index('idx_21431_user_advisory_id', 'chat_groups', ['user_advisory_id'], unique=False)
    op.create_index('idx_21431_ower_id', 'chat_groups', ['ower_id'], unique=False)
    op.create_table('criteria',
    sa.Column('id', sa.BIGINT(), server_default=sa.text("nextval('criteria_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('value_type', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('range', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='Khoảng giá trị của tiêu chí'),
    sa.Column('default_weight', sa.NUMERIC(precision=10, scale=0), autoincrement=False, nullable=True, comment='Trọng số của tiêu chí'),
    sa.Column('status', sa.SMALLINT(), server_default=sa.text("'1'::smallint"), autoincrement=False, nullable=False, comment='stage of model'),
    sa.Column('review_ai_1_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('review_ai_1_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('reviewed_ai_2_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('reviewed_ai_2_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('rejected_ai_1_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('rejected_ai_1_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('ai_status', sa.SMALLINT(), server_default=sa.text("'0'::smallint"), autoincrement=False, nullable=True, comment='DRAFT_C: 0, PRE_PROCESSED_C: 1,AI_DATA_DRAFT: 2, REVIEW_AI_1:3,  REVIEWED_AI_2: 4,  REJECTED_AI_1: 5'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='idx_21476_primary'),
    postgresql_ignore_search_path=False
    )
    op.create_table('user_sessions',
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('access_token', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('refresh_token', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('expires_in', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_sessions_ibfk_1', onupdate='RESTRICT', ondelete='RESTRICT')
    )
    op.create_index('idx_21636_user_id', 'user_sessions', ['user_id'], unique=False)
    op.create_table('event_impact_projects_change',
    sa.Column('event_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('impact_project', sa.BIGINT(), autoincrement=False, nullable=False, comment='ID của dự án bị ảnh hưởng'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('status', sa.SMALLINT(), server_default=sa.text("'0'::smallint"), autoincrement=False, nullable=False, comment='0: add, 1: updated , 2: remove, 3: approved'),
    sa.Column('impact_project_level', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], name='event_impact_projects_copy1_event_id_fkey', onupdate='RESTRICT', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['impact_project'], ['real_estate_projects.id'], name='event_impact_projects_copy1_impact_project_fkey', onupdate='RESTRICT', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('event_id', 'impact_project', name='event_impact_projects_copy1_pkey')
    )
    op.create_table('crawl_sources',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('url', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('crawl_from', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='idx_21467_primary')
    )
    op.create_table('real_estate_projects_url',
    sa.Column('url', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('crawl_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('crawl_from', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('project_status', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('status', sa.SMALLINT(), autoincrement=False, nullable=True, comment='0: inactive, 1: active, 2: deleted'),
    sa.Column('note', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('images', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('url', name='idx_21568_primary')
    )
    op.create_index('idx_21568_crawl_id', 'real_estate_projects_url', ['crawl_id', 'crawl_from'], unique=False)
    op.create_table('event_impact_projects',
    sa.Column('event_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('impact_project', sa.BIGINT(), autoincrement=False, nullable=False, comment='ID của dự án bị ảnh hưởng'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('status', sa.SMALLINT(), server_default=sa.text("'0'::smallint"), autoincrement=False, nullable=False, comment='0: add, 1: updated , 2: remove, 3: approved'),
    sa.Column('impact_project_level', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], name='event_impact_products_copy1_event_id_fkey', onupdate='RESTRICT', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['impact_project'], ['real_estate_projects.id'], name='event_impact_products_copy1_impact_project_fkey', onupdate='RESTRICT', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('event_id', 'impact_project', name='event_impact_products_copy1_pkey')
    )
    op.create_table('chat_read_messages',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('group_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('message_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['chat_groups.id'], name='chat_read_messages_ibfk_2', onupdate='RESTRICT', ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='chat_read_messages_ibfk_1', onupdate='RESTRICT', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name='idx_21458_primary')
    )
    op.create_index('idx_21458_user_id', 'chat_read_messages', ['user_id'], unique=False)
    op.create_index('idx_21458_group_id', 'chat_read_messages', ['group_id'], unique=False)
    op.create_table('admin_comment_resolved',
    sa.Column('model_type', sa.SMALLINT(), autoincrement=False, nullable=False, comment='0: investor, 1: project, 2: product, 3: event...'),
    sa.Column('model_id', sa.BIGINT(), autoincrement=False, nullable=False, comment='id của product, project hoặc event..'),
    sa.Column('model_field_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False, comment='field target vd `name`'),
    sa.Column('is_resolved', sa.SMALLINT(), server_default=sa.text("'0'::smallint"), autoincrement=False, nullable=False),
    sa.Column('resolved_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('resolved_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('status', sa.SMALLINT(), server_default=sa.text("'1'::smallint"), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('model_type', 'model_id', 'model_field_name', name='idx_20152_primary')
    )
    op.create_table('user_bank_loans',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('user_investment_preference_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('impact_real_estate_project_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('bank_provider', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('bank_contract_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('loan_amount', sa.NUMERIC(precision=10, scale=0), autoincrement=False, nullable=True),
    sa.Column('loan_term', sa.NUMERIC(precision=10, scale=0), autoincrement=False, nullable=True),
    sa.Column('loan_rate', sa.NUMERIC(precision=10, scale=0), autoincrement=False, nullable=True),
    sa.Column('interest_rate_anual', sa.NUMERIC(precision=10, scale=0), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('status', sa.SMALLINT(), server_default=sa.text("'1'::smallint"), autoincrement=False, nullable=False, comment='stage of model'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='user_bank_loans_ibfk_3', onupdate='RESTRICT', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_bank_loans_ibfk_5', onupdate='RESTRICT', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_investment_preference_id'], ['user_investment_preference.id'], name='user_bank_loans_ibfk_4', onupdate='RESTRICT', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='idx_21610_primary')
    )
    op.create_index('idx_21610_user_id', 'user_bank_loans', ['user_id'], unique=False)
    op.create_index('idx_21610_user_advisory_id', 'user_bank_loans', ['user_investment_preference_id'], unique=False)
    op.create_index('idx_21610_product_id', 'user_bank_loans', ['product_id'], unique=False)
    op.create_table('criteria_group',
    sa.Column('id', sa.BIGINT(), server_default=sa.text("nextval('criteria_group_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('criteria', sa.BIGINT(), autoincrement=False, nullable=False, comment='Các criteria dùng để tính điểm cho loại sự kiện (danh sách của các criteria)'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['criteria'], ['criteria.id'], name='criteria_group_ibfk_1', onupdate='RESTRICT', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name='idx_21487_primary'),
    postgresql_ignore_search_path=False
    )
    op.create_index('idx_21487_criteria', 'criteria_group', ['criteria'], unique=False)
    op.create_table('admin_roles',
    sa.Column('admin_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('role_key', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['admin_id'], ['admins.id'], name='admin_roles_ibfk_1', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('admin_id', 'role_key', name='idx_21420_primary')
    )
    op.create_table('events_change',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('code_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='mã code của bds, vd SKU0001'),
    sa.Column('type_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('forecast_date', sa.DATE(), autoincrement=False, nullable=True, comment='Thời gian diễn ra sư kiện'),
    sa.Column('actual_date', sa.DATE(), autoincrement=False, nullable=True, comment='Thời điểm thực tế diễn ra sư kiện'),
    sa.Column('event_level', sa.NUMERIC(precision=10, scale=0), autoincrement=False, nullable=True, comment='Mức độ của sự kiện'),
    sa.Column('available_criteria', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('status', sa.SMALLINT(), server_default=sa.text("'1'::smallint"), autoincrement=False, nullable=False, comment='stage of model'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('ai_to_review_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('ai_to_review_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('event_to_update_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('event_to_update_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('ai_rejected_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('ai_rejected_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('ai_status', sa.SMALLINT(), server_default=sa.text("'0'::smallint"), autoincrement=False, nullable=True, comment='DRAFT_C: 0, PRE_PROCESSED_C: 1,AI_DATA_DRAFT: 2, REVIEW_AI_1:3,  REVIEWED_AI_2: 4,  REJECTED_AI_1: 5'),
    sa.Column('impact_address_line', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('impact_ward_id', sa.BIGINT(), autoincrement=False, nullable=True, comment='phường/xã'),
    sa.Column('impact_district_id', sa.BIGINT(), autoincrement=False, nullable=True, comment='quận/huyện'),
    sa.Column('impact_city_id', sa.BIGINT(), autoincrement=False, nullable=True, comment='tỉnh/thanhpho'),
    sa.Column('impact_zip_code', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('note', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('event_to_review_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('event_to_review_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('event_rejected_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('event_rejected_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('ai_approved_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('ai_approved_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('impact_polys', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='json : {type: \'\', poly: "lon1 lat1,lon2 lat2"}'),
    sa.ForeignKeyConstraint(['type_id'], ['event_types.id'], name='events_copy1_type_id_fkey', onupdate='RESTRICT', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name='events_copy1_pkey')
    )
    op.create_table('events',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('code_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='mã code của bds, vd SKU0001'),
    sa.Column('type_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('forecast_date', sa.DATE(), autoincrement=False, nullable=True, comment='Thời gian diễn ra sư kiện'),
    sa.Column('actual_date', sa.DATE(), autoincrement=False, nullable=True, comment='Thời điểm thực tế diễn ra sư kiện'),
    sa.Column('event_level', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='Mức độ của sự kiện'),
    sa.Column('available_criteria', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('status', sa.SMALLINT(), server_default=sa.text("'1'::smallint"), autoincrement=False, nullable=False, comment='stage of model'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('ai_to_review_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('ai_to_review_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('event_to_update_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('event_to_update_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('ai_rejected_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('ai_rejected_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('ai_status', sa.SMALLINT(), server_default=sa.text("'0'::smallint"), autoincrement=False, nullable=True, comment='DRAFT_C: 0, PRE_PROCESSED_C: 1,AI_DATA_DRAFT: 2, REVIEW_AI_1:3,  REVIEWED_AI_2: 4,  REJECTED_AI_1: 5'),
    sa.Column('impact_address_line', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('impact_ward_id', sa.BIGINT(), autoincrement=False, nullable=True, comment='phường/xã'),
    sa.Column('impact_district_id', sa.BIGINT(), autoincrement=False, nullable=True, comment='quận/huyện'),
    sa.Column('impact_city_id', sa.BIGINT(), autoincrement=False, nullable=True, comment='tỉnh/thanhpho'),
    sa.Column('impact_zip_code', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('note', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('impact_polys', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='json : {type: \'\', poly: "lon1 lat1,lon2 lat2"}'),
    sa.Column('event_to_review_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('event_to_review_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('event_rejected_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('event_rejected_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('ai_approved_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('ai_approved_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['type_id'], ['event_types.id'], name='events_ibfk_2', onupdate='RESTRICT', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name='idx_21496_primary')
    )
    op.create_index('idx_21496_type_id', 'events', ['type_id'], unique=False)
    op.create_index('idx_21496_id', 'events', ['id'], unique=False)
    op.create_table('roles',
    sa.Column('key', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=1000), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('key', name='idx_21575_primary'),
    postgresql_ignore_search_path=False
    )
    op.create_table('products',
    sa.Column('id', sa.BIGINT(), server_default=sa.text("nextval('products_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('code_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='mã code của bds, vd SKU0001'),
    sa.Column('real_estate_project_id', sa.BIGINT(), autoincrement=False, nullable=True, comment='dự án bds id'),
    sa.Column('current_price', sa.NUMERIC(precision=20, scale=2), autoincrement=False, nullable=True, comment='Giá hiện tại của sản phẩm BĐS (giá tại thời điểm nhập dữ liệu)'),
    sa.Column('rarity_level', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='FE1 - Mức độ Hiếm của Sản phẩm BĐS(1 -> 5) '),
    sa.Column('average_unit_price', sa.NUMERIC(precision=12, scale=2), autoincrement=False, nullable=True, comment='FE2 - Đơn giá trung bình (triệu/m2)'),
    sa.Column('master_area', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='FE3 - Diện tích sàn  (m2)'),
    sa.Column('home_type', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='FE4 - Loại nhà đất (Biệt thự Đơn lập, Biệt thự Song lập, Nhà Liền kề, Shophouse, Shophouse Chân đế, Đất nền dự án Sàn, Sàn văn phòng, Sàn thương mại, Shoptel'),
    sa.Column('usage_type', sa.SMALLINT(), autoincrement=False, nullable=True, comment='FE5 - Thời hạn sử dụng BĐS (0: Lâu dài, 1: 50 năm, 2: 70 năm, 3:90 năm)'),
    sa.Column('land_use_cert', sa.SMALLINT(), autoincrement=False, nullable=True, comment='FE6 - Giấy CN quyền sử dụng BĐS (1: đã có, 0: chưa có)'),
    sa.Column('front_road_level', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='FE7 - Điểm kích thước mặt đường của Sản phẩm BĐS'),
    sa.Column('location_level', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='FE9 - Điểm cấp đô thị của tỉnh thành  // Chấm điểm vị trí tiện lợi của sản phẩm BĐS (giá trị 1-5)'),
    sa.Column('quality_level', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='FE10 - Điểm chất lượng sử dụng sản phẩm BĐS '),
    sa.Column('potential_profit', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='{2021:0.15, 2022:0.20, …} // 1.1 Điểm Lợi nhuận Tiềm Năng (Profit Score)'),
    sa.Column('current_price_min', sa.NUMERIC(precision=20, scale=2), autoincrement=False, nullable=True, comment='giá min'),
    sa.Column('current_price_max', sa.NUMERIC(precision=20, scale=2), autoincrement=False, nullable=True, comment='giá max'),
    sa.Column('address_line', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='địa chỉ'),
    sa.Column('distance_to_center_level', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='FE8 - Điểm khoảng cách tới trung tâm tỉnh thành  *'),
    sa.Column('nbr_bed_room', sa.BIGINT(), autoincrement=False, nullable=True, comment='số phòng ngủ'),
    sa.Column('nbr_bath_room', sa.BIGINT(), autoincrement=False, nullable=True, comment='Số phòng tắm'),
    sa.Column('built_up_area', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='Diện tích tim tường'),
    sa.Column('carpet_area', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='Diện tích thông thủy'),
    sa.Column('nbr_floor', sa.BIGINT(), autoincrement=False, nullable=True, comment='số tầng'),
    sa.Column('nbr_apartments', sa.BIGINT(), autoincrement=False, nullable=True, comment='tổng số căn'),
    sa.Column('saleable_area', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='Diện tích Xây dựng'),
    sa.Column('home_direction', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='hướng nhà'),
    sa.Column('distance_to_center', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='Khoảng cách từ sản phẩm BĐS tới trung tâm tỉnh thành.'),
    sa.Column('payment_procedures', sa.TEXT(), autoincrement=False, nullable=True, comment='Luồng tiền thanh toán'),
    sa.Column('taking_over_type', sa.SMALLINT(), autoincrement=False, nullable=True, comment='loại bàn giao. 0: Hoàn thiện, 1:Bán hoàn thiện nội thất, 2:Hoàn thiện mặt ngoài, 3:Xây thô hoàn toàn,  4: Đất nền'),
    sa.Column('taking_over_date', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='ngày bàn giao'),
    sa.Column('subdivision', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='Thuộc tiểu khu'),
    sa.Column('legal_risk_score', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='2.1 - Tiêu chí Rủi Ro Pháp Lý ( Legal risk score)'),
    sa.Column('financial_risk_score', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='2.2 - Tiêu chí Rủi Ro Tài Chính ( Financial risk score)'),
    sa.Column('cost_score', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='2.3 - Tiêu chí Mức giá và diện tích sử dụng (Cost score)'),
    sa.Column('product_score', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='2.4 - Tiêu chí Chất lượng nhà và tiện ích (Product score)'),
    sa.Column('transport_score', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='2.5 - Tiêu chí Chất lượng vị trí giao thông (Transport score)'),
    sa.Column('trending_score', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='1. Trend trên Thị trường'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('images', sa.TEXT(), autoincrement=False, nullable=True, comment='array of list image'),
    sa.Column('thumbnail', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('previewlink', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('crawl_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('crawl_from', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('crawl_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('status', sa.SMALLINT(), server_default=sa.text("'1'::smallint"), autoincrement=False, nullable=True, comment='0: inactive, 1: actived, 2: deleted'),
    sa.Column('ai_to_review_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('ai_to_review_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('event_to_update_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('event_to_update_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('ai_rejected_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('ai_rejected_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('app_to_review_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('app_to_review_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('app_approved_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('app_approved_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('app_rejected_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('app_rejected_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('app_status', sa.SMALLINT(), server_default=sa.text("'0'::smallint"), autoincrement=False, nullable=True, comment='DRAFT_C: 0, PRE_PROCESSED_C: 1, APP_DATA_DRAFT: 2, REVIEW_APP_1:3, REVIEWED_APP_2: 4, REJECTED_APP_1: 5'),
    sa.Column('ai_status', sa.SMALLINT(), server_default=sa.text("'0'::smallint"), autoincrement=False, nullable=True, comment='DRAFT_C: 0, PRE_PROCESSED_C: 1,AI_DATA_DRAFT: 2, REVIEW_AI_1:3,  REVIEWED_AI_2: 4,  REJECTED_AI_1: 5'),
    sa.Column('note', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('lat', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('lon', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('event_to_review_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('event_to_review_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('event_rejected_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('event_rejected_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('ai_approved_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('ai_approved_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['real_estate_project_id'], ['real_estate_projects.id'], name='products_ibfk_1', onupdate='RESTRICT', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='idx_21547_primary'),
    postgresql_ignore_search_path=False
    )
    op.create_index('idx_21547_real_estate_project_id', 'products', ['real_estate_project_id'], unique=False)
    op.create_index('idx_21547_name', 'products', ['name'], unique=False)
    op.create_table('chat_group_members',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('group_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('member_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('member_type', sa.SMALLINT(), server_default=sa.text("'1'::smallint"), autoincrement=False, nullable=True, comment='0: admin, 1: user'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.SMALLINT(), server_default=sa.text("'0'::smallint"), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['chat_groups.id'], name='chat_group_members_ibfk_1', onupdate='RESTRICT', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name='idx_21440_primary')
    )
    op.create_index('idx_21440_group_id', 'chat_group_members', ['group_id'], unique=False)
    op.create_table('cities',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('order', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='idx_21462_primary'),
    postgresql_ignore_search_path=False
    )
    op.create_index('idx_21462_id', 'cities', ['id'], unique=False)
    op.create_table('investors',
    sa.Column('id', sa.BIGINT(), server_default=sa.text("nextval('investors_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=1000), autoincrement=False, nullable=False),
    sa.Column('code_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('trading_name', sa.VARCHAR(length=1000), autoincrement=False, nullable=True, comment='Tên giao dịch'),
    sa.Column('prestige_score', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='điểm uy tín'),
    sa.Column('registered_capital_amount', sa.NUMERIC(precision=20, scale=2), autoincrement=False, nullable=True, comment='Số Vốn đăng ký'),
    sa.Column('is_quoted', sa.SMALLINT(), server_default=sa.text("'0'::smallint"), autoincrement=False, nullable=True, comment='0/1 đã niêm yết hay chưa'),
    sa.Column('activity_type', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('tax_number', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='Mã số thuế'),
    sa.Column('address_line', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('ward_id', sa.BIGINT(), autoincrement=False, nullable=True, comment='phường/xã'),
    sa.Column('district_id', sa.BIGINT(), autoincrement=False, nullable=True, comment='quận/huyện'),
    sa.Column('city_id', sa.BIGINT(), autoincrement=False, nullable=True, comment='tỉnh/thanhpho'),
    sa.Column('lat', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('lon', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('zip_code', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('legal_representative', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='Đại diện pháp luật'),
    sa.Column('license_date', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='Ngày cấp giấy phép'),
    sa.Column('activity_date', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='Ngày hoạt động'),
    sa.Column('website_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('status', sa.SMALLINT(), server_default=sa.text("'1'::smallint"), autoincrement=False, nullable=True, comment='0: inactive, 1: active, 2: deleted'),
    sa.Column('ai_to_review_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('ai_to_review_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('ai_rejected_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('ai_rejected_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('ai_status', sa.SMALLINT(), server_default=sa.text("'0'::smallint"), autoincrement=False, nullable=True, comment='DRAFT_C: 0, PRE_PROCESSED_C: 1,AI_DATA_DRAFT: 2, REVIEW_AI_1:3,  REVIEWED_AI_2: 4,  REJECTED_AI_1: 5'),
    sa.Column('crawl_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('crawl_from', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('crawl_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('logo_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('full_address', sa.VARCHAR(length=1000), autoincrement=False, nullable=True),
    sa.Column('note', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('activity_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('ai_approved_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('ai_approved_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='idx_21529_primary'),
    postgresql_ignore_search_path=False
    )
    op.create_index('idx_21529_tax_number', 'investors', ['tax_number'], unique=False)
    op.create_index('idx_21529_name', 'investors', ['name'], unique=False)
    op.create_table('admins',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('acc_type', sa.SMALLINT(), autoincrement=False, nullable=True, comment='0: SuperAdmin, 1: Admin'),
    sa.Column('status', sa.SMALLINT(), autoincrement=False, nullable=True, comment='0: Pending, 1: Active, 2: Deactive'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('deleted_flag', sa.SMALLINT(), server_default=sa.text("'0'::smallint"), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='idx_21391_primary')
    )
    op.create_table('districts',
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('city_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('order', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['city_id'], ['cities.id'], name='districts_ibfk_1', onupdate='RESTRICT', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name='idx_21491_primary')
    )
    op.create_index('idx_21491_city_id', 'districts', ['city_id'], unique=False)
    op.create_table('user_advisory_proposed_products',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('user_advisory_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('status', sa.SMALLINT(), server_default=sa.text("'1'::smallint"), autoincrement=False, nullable=False, comment='stage of model'),
    sa.ForeignKeyConstraint(['user_advisory_id'], ['user_investment_preference.id'], name='user_advisory_proposed_products_ibfk_1', onupdate='RESTRICT', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='idx_21603_primary')
    )
    op.create_index('idx_21603_user_advisory_proposed_products_ibfk_1', 'user_advisory_proposed_products', ['user_advisory_id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.BIGINT(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('acc_type', sa.SMALLINT(), server_default=sa.text("'0'::smallint"), autoincrement=False, nullable=False, comment='0: user, 1: tư vấn viên'),
    sa.Column('registration_type', sa.SMALLINT(), server_default=sa.text("'0'::smallint"), autoincrement=False, nullable=False, comment='0: Phone, 1: Google, 2: Facebook, 3: Email'),
    sa.Column('social_user_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('date_of_birth', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('status', sa.SMALLINT(), server_default=sa.text("'1'::smallint"), autoincrement=False, nullable=False, comment='0: deactive, 1 : activate, 2: deleted'),
    sa.Column('profile_picture', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('first_name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('phone_number', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('region_code', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('address_line', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('ward_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='phường/xã'),
    sa.Column('district_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='quận/huyện'),
    sa.Column('city_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='tỉnh/thanhpho'),
    sa.Column('lat', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('lon', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('zip_code', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('email_verified', sa.SMALLINT(), server_default=sa.text("'0'::smallint"), autoincrement=False, nullable=True, comment='0: un_verified, 1: verified'),
    sa.Column('verified_token', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('is_subscribe', sa.SMALLINT(), server_default=sa.text("'1'::smallint"), autoincrement=False, nullable=True, comment='is supcribe email'),
    sa.Column('refer_link', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='idx_21589_primary'),
    postgresql_ignore_search_path=False
    )
    op.create_table('home_type',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('value', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('status', sa.SMALLINT(), server_default=sa.text("'1'::smallint"), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='idx_21522_primary')
    )
    op.create_table('real_estate_projects',
    sa.Column('id', sa.BIGINT(), server_default=sa.text("nextval('real_estate_projects_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('investor_id', sa.BIGINT(), autoincrement=False, nullable=True, comment='chủ đầu tư, nhà phát triển'),
    sa.Column('code_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('project_type', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True, comment='Json array : [{type, nbr_apartments,nbr_buildings, nbr_floor_min, nbr_floor_max, density_of_elevator, hallway_width }], type lấy từ home_type tbl'),
    sa.Column('address_line', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('ward_id', sa.BIGINT(), autoincrement=False, nullable=True, comment='phường/xã'),
    sa.Column('district_id', sa.BIGINT(), autoincrement=False, nullable=True, comment='quận/huyện'),
    sa.Column('city_id', sa.BIGINT(), autoincrement=False, nullable=True, comment='tỉnh/thanhpho'),
    sa.Column('lat', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('lon', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('zip_code', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('distance_to_center', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='Khoảng cách vào Trung tâm Tỉnh thành km'),
    sa.Column('distance_to_urban', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='Khoảng cách vào Nội thành km'),
    sa.Column('distance_to_major_road', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='Khoảng cách ra Trục đường Lớn gần nhất (Cấp Tỉnh/TP)'),
    sa.Column('total_area', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('total_area_unit', sa.SMALLINT(), server_default=sa.text("'0'::smallint"), autoincrement=False, nullable=True, comment='0: m2, 1: ha'),
    sa.Column('density_of_building', sa.NUMERIC(precision=10, scale=0), autoincrement=False, nullable=True, comment='Mật độ xây dựng %'),
    sa.Column('project_status', sa.SMALLINT(), autoincrement=False, nullable=True, comment='0: đang mở bán, 1: sắp mở bán, 2: đã bàn giao'),
    sa.Column('opening_time_soon', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True, comment='với project_status = 1. set = tháng'),
    sa.Column('project_website_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('start_date', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='Ngày khởi công'),
    sa.Column('taking_over_date', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='Ngày bắt đầu bàn giao'),
    sa.Column('sales_consultants', sa.TEXT(), autoincrement=False, nullable=True, comment='Các Tư vấn bán hàng'),
    sa.Column('constructo_unit', sa.VARCHAR(length=2000), autoincrement=False, nullable=True, comment='Đơn vị thi công, vd: Coteccons, Ecopa'),
    sa.Column('design_unit', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='Đơn vị thiết kế'),
    sa.Column('management_unit', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='Đơn vị quản lý'),
    sa.Column('project_quality_level', sa.SMALLINT(), autoincrement=False, nullable=True, comment='Mức chất lượng sản phẩm (giá trị từ 1-5)'),
    sa.Column('status', sa.SMALLINT(), server_default=sa.text("'1'::smallint"), autoincrement=False, nullable=False, comment='0: inactive, 1: active, 2: deleted'),
    sa.Column('advantage_inner', sa.TEXT(), autoincrement=False, nullable=True, comment='Mức tiện ích nội khu, string of array list advantage'),
    sa.Column('advantage_outer', sa.TEXT(), autoincrement=False, nullable=True, comment='Mức tiện ích ngoại khu, string of array list advantage'),
    sa.Column('ai_status', sa.SMALLINT(), autoincrement=False, nullable=True, comment='stage preview của product'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('crawl_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('crawl_from', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('crawl_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('full_address', sa.VARCHAR(length=1000), autoincrement=False, nullable=True),
    sa.Column('images', sa.TEXT(), autoincrement=False, nullable=True, comment='array : { url, order}'),
    sa.Column('ai_to_review_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('ai_to_review_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('event_to_update_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('event_to_update_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('ai_rejected_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('ai_rejected_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('note', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('payment_procedures', sa.TEXT(), autoincrement=False, nullable=True, comment='Luồng tiền thanh toán'),
    sa.Column('event_to_review_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('event_to_review_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('event_rejected_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('event_rejected_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.Column('ai_approved_by', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('ai_approved_at', postgresql.TIMESTAMP(timezone=True, precision=6), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['investor_id'], ['investors.id'], name='real_estate_projects_ibfk_1', onupdate='RESTRICT', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='idx_21559_primary'),
    postgresql_ignore_search_path=False
    )
    op.create_index('idx_21559_name', 'real_estate_projects', ['name'], unique=False)
    op.create_index('idx_21559_investor_id', 'real_estate_projects', ['investor_id'], unique=False)
    op.create_table('role_permissions',
    sa.Column('permission_key', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('role_key', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['permission_key'], ['admin_permissions.key'], name='role_permissions_ibfk_2', onupdate='RESTRICT', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_key'], ['roles.key'], name='role_permissions_ibfk_1', onupdate='RESTRICT', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('permission_key', 'role_key', name='idx_21581_primary')
    )
    op.create_index('idx_21581_role_key', 'role_permissions', ['role_key'], unique=False)
    op.create_table('admin_permissions',
    sa.Column('key', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('descripition', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('key', name='idx_21414_primary')
    )
    op.create_index('idx_21414_key', 'admin_permissions', ['key'], unique=False)
    op.create_table('investors_url',
    sa.Column('investor_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('crawl_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('crawl_from', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('status', sa.SMALLINT(), server_default=sa.text("'0'::smallint"), autoincrement=False, nullable=True, comment='0: new, 1: crawled, 2: inactived'),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('logo_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('investor_id', name='idx_21538_primary')
    )
    op.create_index('idx_21538_crawl_id', 'investors_url', ['crawl_url', 'crawl_from'], unique=False)
    op.create_table('user_matched_properties',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='user_matched_properties_ibfk_2', onupdate='RESTRICT', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_matched_properties_ibfk_1', onupdate='RESTRICT', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='idx_21632_primary')
    )
    op.create_index('idx_21632_user_id', 'user_matched_properties', ['user_id'], unique=False)
    op.create_index('idx_21632_product_id', 'user_matched_properties', ['product_id'], unique=False)
    op.create_table('user_follows_properties',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='user_follows_properties_ibfk_1', onupdate='RESTRICT', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_follows_properties_ibfk_2', onupdate='RESTRICT', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='idx_21620_primary')
    )
    op.create_index('idx_21620_user_id', 'user_follows_properties', ['user_id'], unique=False)
    op.create_index('idx_21620_product_id', 'user_follows_properties', ['product_id'], unique=False)
    op.create_table('event_types',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('guideline_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('status', sa.SMALLINT(), server_default=sa.text("'1'::smallint"), autoincrement=False, nullable=False, comment='stage of model'),
    sa.Column('code_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['guideline_id'], ['criteria_group.id'], name='event_types_ibfk_1', onupdate='RESTRICT', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id', name='idx_21515_primary')
    )
    op.create_index('idx_21515_guideline_id', 'event_types', ['guideline_id'], unique=False)
    op.create_table('admin_comments',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('admin_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('model_type', sa.SMALLINT(), autoincrement=False, nullable=False, comment='0: investor, 1: project, 2: product, 3: event...'),
    sa.Column('model_id', sa.BIGINT(), autoincrement=False, nullable=False, comment='id của product, project hoặc event..'),
    sa.Column('model_field_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False, comment='field target vd `name`'),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True, comment='nội dung comment'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('status', sa.SMALLINT(), server_default=sa.text("'1'::smallint"), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='idx_20144_primary')
    )
    op.drop_table('UserAdvance')
    op.drop_table('UserBasic')
    # ### end Alembic commands ###
